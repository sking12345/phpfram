(function(b) {
    b.gritter = {};
    b.gritter.options = {
        position: "",
        class_name: "",
        fade_in_speed: "medium",
        fade_out_speed: 1000,
        time: 6000,
    };
    b.gritter.add = function(f) {
        try {
            return a.add(f || {})
        } catch (d) {
            var c = "Gritter Error: " + d;
            (typeof(console) != "undefined" && console.error) ? console.error(c, f): alert(c)
        }
    };
    b.gritter.remove = function(d, c) {
        a.removeSpecific(d, c || {})
    };
    b.gritter.removeAll = function(c) {
        a.stop(c || {})
    };
    var a = {
        position: "",
        fade_in_speed: "",
        fade_out_speed: "",
        time: "",
        _custom_timer: 0,
        _item_count: 0,
        _is_setup: 0,
        _tpl_close: '<div class="gritter-close"></div>',
        _tpl_title: '<span class="gritter-title">[[title]]</span>',
        _tpl_item: '<a id="gritter-item-[[number]]" data-item="other" class="gritter-item-wrapper J_menuItem [[item_class]]"  style="display:none">' +
            '<div class="gritter-top"></div>' +
            '<div class="gritter-item">[[close]][[image]]<div class="[[class_name]]">[[title]]<p>[[text]]</p></div>' +
            '<div style="clear:both"></div></div><div class="gritter-bottom"></div></a>',
        _tpl_wrap: '<div id="gritter-notice-wrapper" ></div>',

        add: function(g) {
            if (typeof(g) == "string") {
                g = {
                    text: g
                }
            }
            if (!g.text) {
                throw 'You must supply "text" parameter.'
            }
            if (!this._is_setup) {
                this._runSetup()
            }
            var k = g.title,
                n = g.text,
                e = g.image || "",
                l = g.sticky || false,
                m = g.class_name || b.gritter.options.class_name,
                j = b.gritter.options.position,
                d = g.time || "",
                r = g.reload || "";
            this._verifyWrapper();
            this._item_count++;
            var f = this._item_count,
                i = this._tpl_item;
            b(["before_open", "after_open", "before_close", "after_close"]).each(function(p, q) {
                a["_" + q + "_" + f] = (b.isFunction(g[q])) ? g[q] : function() {}
            });
            this._custom_timer = 0;
            if (d) {
                this._custom_timer = d
            }
            var c = (e != "") ? '<img src="' + e + '" class="gritter-image" />' : "",
                h = (e != "") ? "gritter-with-image" : "gritter-without-image";
            if (k) {
                k = this._str_replace("[[title]]", k, this._tpl_title)
            } else {
                k = ""
            }
            i = this._str_replace(["[[title]]", "[[text]]", "[[close]]", "[[image]]", "[[number]]", "[[class_name]]", "[[item_class]]", "[[reload]]"], [k, n, this._tpl_close, c, this._item_count, h, m], i);
            if (this["_before_open_" + f]() === false) {
                return false
            }
            b("#gritter-notice-wrapper").addClass(j).append(i);
            var o = b("#gritter-item-" + this._item_count);
            o.fadeIn(this.fade_in_speed, function() {
                a["_after_open_" + f](b(this))
            });
            if (!l) {
                this._setFadeTimer(o, f)
            }
            b(o).bind("mouseenter mouseleave", function(p) {
                if (p.type == "mouseenter") {
                    if (!l) {
                        a._restoreItemIfFading(b(this), f)
                    }
                } else {
                    if (!l) {
                        a._setFadeTimer(b(this), f)
                    }
                }
                a._hoverState(b(this), p.type)
            });
            b(o).find(".gritter-close").click(function() {
                a.removeSpecific(f, {}, null, true)
                return false
            });

        },
        _countRemoveWrapper: function(c, d, f) {
            d.remove();
            this["_after_close_" + c](d, f);
            if (b(".gritter-item-wrapper").length == 0) {
                b("#gritter-notice-wrapper").remove()
            }
        },
        _fade: function(g, d, j, f) {
            var j = j || {},
                i = (typeof(j.fade) != "undefined") ? j.fade : true,
                c = j.speed || this.fade_out_speed,
                h = f;
            this["_before_close_" + d](g, h);
            if (f) {
                g.unbind("mouseenter mouseleave")
            }
            if (i) {
                g.animate({
                    opacity: 0
                }, c, function() {
                    g.animate({
                        height: 0
                    }, 300, function() {
                        a._countRemoveWrapper(d, g, h)
                    })
                })
            } else {
                this._countRemoveWrapper(d, g)
            }
        },
        _hoverState: function(d, c) {
            if (c == "mouseenter") {
                d.addClass("hover");
                d.find(".gritter-close").show()
            } else {
                d.removeClass("hover");
                d.find(".gritter-close").hide()
            }
        },
        removeSpecific: function(c, g, f, d) {
            if (!f) {
                var f = b("#gritter-item-" + c)
            }
            this._fade(f, c, g || {}, d)
        },
        _restoreItemIfFading: function(d, c) {
            clearTimeout(this["_int_id_" + c]);
            d.stop().css({
                opacity: "",
                height: ""
            })
        },
        _runSetup: function() {
            for (opt in b.gritter.options) {
                this[opt] = b.gritter.options[opt]
            }
            this._is_setup = 1
        },
        _setFadeTimer: function(f, d) {
            var c = (this._custom_timer) ? this._custom_timer : this.time;
            this["_int_id_" + d] = setTimeout(function() {
                a._fade(f, d)
            }, c)
        },
        stop: function(e) {
            var c = (b.isFunction(e.before_close)) ? e.before_close : function() {};
            var f = (b.isFunction(e.after_close)) ? e.after_close : function() {};
            var d = b("#gritter-notice-wrapper");
            c(d);
            d.fadeOut(function() {
                b(this).remove();
                f()
            })
        },
        _str_replace: function(v, e, o, n) {
            var k = 0,
                h = 0,
                t = "",
                m = "",
                g = 0,
                q = 0,
                l = [].concat(v),
                c = [].concat(e),
                u = o,
                d = c instanceof Array,
                p = u instanceof Array;
            u = [].concat(u);
            if (n) {
                this.window[n] = 0
            }
            for (k = 0,
                g = u.length; k < g; k++) {
                if (u[k] === "") {
                    continue
                }
                for (h = 0,
                    q = l.length; h < q; h++) {
                    t = u[k] + "";
                    m = d ? (c[h] !== undefined ? c[h] : "") : c[0];
                    u[k] = (t).split(l[h]).join(m);
                    if (n && u[k] !== t) {
                        this.window[n] += (t.length - u[k].length) / l[h].length
                    }
                }
            }
            return p ? u : u[0]
        },
        _verifyWrapper: function() {
            if (b("#gritter-notice-wrapper").length == 0) {
                b("body").append(this._tpl_wrap)
            }
        }
    }
})(jQuery);

//自定义消息
/* (function($) {
    var mi = 0;
    $.fn.messageFn = function(opt) {
        (opt) || (opt = {});
        // 参数封装
        opt = $.extend(true, {
            title: "", //标题
            time: "", //内容
            image: "",
            url: "", //链接
            reload: "",
            text: ""
        }, opt);
        init.call(this);

        if (document.hidden) {
            notification(opt.time, opt.text);
        }

        function init() {
            mi++;
            $.gritter.add({
                title: opt.text,
                text: opt.time,
                image: 'static/frame/img/demo/envelope.png',
                sticky: false
            });
            $("#gritter-item-" + mi).attr("href", "javascript:;");
            $("#gritter-item-" + mi).attr("data-href", opt.url);
            $("#gritter-item-" + mi).attr("data-item", "other");
            $("#gritter-item-" + mi).attr("data-message", opt.title);
            $("#gritter-item-" + mi).attr("reload", opt.reload);
        }
    }
}(jQuery)); */
//自定义消息
(function($) {
    var str = "";
    $.fn.notifyFn = function(opt) {
        (opt) || (opt = {});
        // 参数封装
        opt = $.extend(true, {
            title: "", //导航标题
            time: "", //消息时间
            url: "", //消息链接
            text: "", //消息内容
            reload: "" //是否要刷新页面
        }, opt);

        init.call(this);

        function init() {
            //var aLen = $("#notifyWrap").find(".list-group-item").length;
            var num = $(".msg-num").html();
            num++;
            if (num != 0) {
                $(".msg-num").css("display", "inline-block");
            } else {
                $(".msg-num").css("display", "none");
            }

            $(".msg-num").html(num);
            /*if (aLen == 10) {
                $("#notifyWrap").find(".list-group-item").eq(9).remove();
            } */
            if (opt.url == "") {
                str = '<div class="msg-item" >' +
                    '<div class="media-top">'+
                    '<h4>' + opt.title+'</h4>'+
                    '<span>' + opt.time+'</span>'+
                    '</div>'+
                    '<a class="media-con list-group-item" herf="javascript:;" data-href="' + opt.url + '" data-Item="other" data-reload="' + opt.reload + '" data-message="' + opt.title + '">' + opt.text +
                    '</a><div class="media-tip">' + '标记已读' +'</div></div>';
            } else {
                str = '<div class="msg-item" >' +
                    '<div class="media-top ">' +
                    '<h4>' + opt.title + '</h4>' +
                    '<span>' + opt.time + '</span>' +
                    '</div>' +
                    '<a class="media-con list-group-item" herf="javascript:;"  data-href="' + opt.url + '"  data-Item="other" data-reload="' + opt.reload + '" data-message="' + opt.title + '">' + opt.text +
                    '</a><div class="media-tip">' + '标记已读' + '</div></div>';
                
            }
            $("#notifyWrap").find("p.nomsg").hide();
            $("#notifyWrap").prepend(str);


        }
    }
}(jQuery));


$(function() {
    $("body").on("click", ".notify-wrap,.msg-center .msg-header-close,.msg-header-more", function(e) {
        var _this = $(this),
            msgDom = $(".msg-center");
        if (msgDom.hasClass('msg-select')){
            msgDom.removeClass("msg-select");
            msgDom.animate({
                right:'-400px'
            },400)
        }else{
            msgDom.addClass("msg-select");
            msgDom.animate({
                right: '0'
            }, 400)
        }
    })
    $("body").on("click",".media-tip",function(){
        var _this = $(this),
            _parent = _this.parents(".msg-item ");
        _parent.animate({
            opacity: 0
        }, 400);
        setTimeout(function(){
            _parent.remove();
        },500)
    })
})

//外部提示递归顶部选项
var notifiFlag = true;
var notifiId = ""

function returnTopId(arr, url) {
    for (var i = 0; i < arr.length; i++) {
        if (arr[i].url == url) {
            if (notifiFlag) {
                notifiId = arr[i].topid;
                notifiFlag = false;
            }
        } else {
            if (arr[i].children && arr[i].children.length > 0) {
                returnTopId(arr[i].children, url);
            }
        }
    }
}

//消息提醒


function notification(msg, title, url) {
    if (window.Notification) {
        function popNotice() {
            var body = msg;
            var notification = new Notification(title, {
                body: body,
                // renotify: true, //目前没有tag，不需要这个
                requireInteraction: true
            });

            notification.onshow = function() { setTimeout(notification.close, 1500000) }
            notification.onclick = function() {
                window.focus();
                if (url == undefined || url == "") return false; //如果url为空，不调整
                notifiFlag = true;
                notifiId = "";
                returnTopId(MenuData, url);

                if (notifiId == "") { //如果侧边导航为空，表示不存在导航
                    var b = true; //判断是否已经打开
                    $(".J_menuTabs .page-tabs-content").find(".J_menuTab").each(function() {
                        var _t = $(this);
                        if (_t.attr("data-id") == url) {
                            b = false;
                        }
                    })
                    if (b) {
                        $(".J_mainContent .J_iframe").hide();
                        //生成ifram
                        var n = '<iframe class="J_iframe" name="iframe999" width="100%" height="100%" src="' + url + '" frameborder="0" data-id="' + url + '" seamless></iframe>';
                        $(".J_mainContent").append(n);
                        //生成选项卡
                        var p = '<a href="javascript:;" class="active J_menuTab" data-id="' + url + '" data-index="999" >' + title + ' <i class="fa fa-times-circle"></i></a>';
                        $(".J_menuTab").removeClass("active");
                        $(".J_menuTabs .page-tabs-content").append(p);
                    } else {
                        $(".J_menuTabs .page-tabs-content .J_menuTab[data-id='" + url + "']").click();
                    }
                    return false;
                } else {
                    //如果存在侧边导航
                    $(".nav-left li[data-index='" + notifiId + "']").click();
                    $("#side-menu a[href='" + url + "']").click();
                    $("#notifyWrap .msg-item").addClass("invalid-item");
                    $(".msg-num").html("0").hide();
                    $(this).parents(".notify-wrap").removeClass("open");
                    return false;
                }

                notification.close();
            };
           
        }
        if (Notification.permission == "granted") {
            popNotice();
        } else if (Notification.permission != "denied") {
            Notification.requestPermission(function (permission) {
                // 如果用户同意，就可以向他们发送通知
                if (permission === "granted") {
                    popNotice();
                }
              });
        }
    } else {
        console.log("浏览器不支持Notification");
    }
}



//新消息弹出层提醒
(function($) {
    var mi = 0;

    //创建mp3标签
    window.MESSAGE_AUDIO = '';
    if($('#toastr-audio').length == 0){
        window.MESSAGE_AUDIO = document.createElement('audio');
        window.MESSAGE_AUDIO.id = 'toastr-audio'
        window.MESSAGE_AUDIO.style.display="none"
        window.MESSAGE_AUDIO.setAttribute('src', 'static/frame/audio/tips.mp3');
        document.body.appendChild(window.MESSAGE_AUDIO)
    }

    //此处在jqueyr.min.js 绑定document点击事件，
    //用于触发audio的自动播放
    $(document).on('click',function(e){
        if(/Safari/.test(navigator.userAgent)){
            if(!window.hasGetUserPointer){
                window.MESSAGE_AUDIO.muted = true;
                window.MESSAGE_AUDIO.play();
            }
            window.hasGetUserPointer = true;
        }
    })

    $.fn.toastr = function(opt) {
        (opt) || (opt = {});
        // 参数封装
        opt = $.extend(true, {
            "closeButton": true,
            "debug": false,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "onclick": null,
            "showDuration": "4001111111",
            "hideDuration": "1022222200",
            "timeOut": "7000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
        }, opt);
        init.call(this);

        if (document.hidden) {
            notification(opt.text, opt.title, opt.url);

        }


        function init() {
            toastr.options = opt;
            toastr[opt.type](opt.text, opt.title);

            //chrome浏览器可以通过iframe方式实现自动播放
            if(/Chrome/.test(navigator.userAgent)){
                $('#toastr-audio').length && $('#toastr-audio').remove();
                $('body').append('<iframe src="static/frame/audio/tips.mp3" allow="autoplay" style="display:none" id="toastr-audio">');
            }else{
                if(window.MESSAGE_AUDIO){
                    window.MESSAGE_AUDIO.muted = false;
                    window.MESSAGE_AUDIO.currentTime = 0;
                    window.MESSAGE_AUDIO.play();
                }
            }
        }
    }
}(jQuery));